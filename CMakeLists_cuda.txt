cmake_minimum_required(VERSION 3.10)
project(FluidSimulationCUDA CUDA CXX)

# CUDA Toolkit Settings
set(CUDA_TOOLKIT_ROOT_DIR "/fs/nexus-scratch/heechany/cuda-11.8")
set(CMAKE_CUDA_COMPILER "${CUDA_TOOLKIT_ROOT_DIR}/bin/nvcc")

# CUDA Settings
set(CMAKE_CUDA_STANDARD 14)
set(CMAKE_CUDA_STANDARD_REQUIRED ON)

# Release mode: optimize
set(CMAKE_CXX_FLAGS_RELEASE "-O3")
set(CMAKE_CUDA_FLAGS_RELEASE "-O3")

# Debug mode: enable debug info, no optimization
set(CMAKE_CXX_FLAGS_DEBUG "-g")
set(CMAKE_CUDA_FLAGS_DEBUG "-g -G")

# # Enable Debug by default (optional)
# set(CMAKE_BUILD_TYPE Debug)

# Add include directories
include_directories(
    ${CUDA_TOOLKIT_ROOT_DIR}/include
    ${CMAKE_CURRENT_SOURCE_DIR}/include
)

# Source file
set(CPU_SOURCES
    FluidSimulator_cuda.cpp
    SimulationParameters.cpp
    jsoncpp.cpp
)

set(CUDA_SOURCES
    cuda/Particles.cu
    cuda/StaggeredGrid.cu
    cuda/PIC_FLIP.cu
    cuda/PressureSolver.cu
)

# Create executable
add_executable(FluidSimulator_cuda ${CPU_SOURCES} ${CUDA_SOURCES})

# Set header file paths
target_include_directories(FluidSimulator_cuda PRIVATE ${CMAKE_CURRENT_SOURCE_DIR})

# CUDA compiler settings
set_target_properties(FluidSimulator_cuda PROPERTIES
    CUDA_SEPARABLE_COMPILATION ON
)

# Set output directory
set_target_properties(FluidSimulator_cuda PROPERTIES
    RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin"
)

# Installation settings
install(TARGETS FluidSimulator_cuda
    RUNTIME DESTINATION bin
)